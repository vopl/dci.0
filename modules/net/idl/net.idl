
scope net
{
    scope error
    {
        errc general
        {
            implementation_down: "исполняющий слой отключен (например при перезагрузке модуля, или соответствующий девайс вдруг отключился)";

            no_interface: "tratata \"pumpum\"";
            channel_closed;
        }
    }

    /////////////////////////////////////////////////////////
    interface Host
    {
        in links:               ()                  -> map<uint32, Link>;

        out linkAdded:          (uint32 id, Link v);

        in ip4StreamServer:     ()                  -> ip4::stream::Server;
        in ip4StreamClient:     ()                  -> ip4::stream::Client;
        in ip4DatagramChannel:  ()                  -> ip4::datagram::Channel;

        in ip6StreamServer:     ()                  -> ip6::stream::Server;
        in ip6StreamClient:     ()                  -> ip6::stream::Client;
        in ip6DatagramChannel:  ()                  -> ip6::datagram::Channel;

        in localStreamServer:   ()                  -> local::stream::Server;
        in localStreamClient:   ()                  -> local::stream::Client;
    }

    /////////////////////////////////////////////////////////
    interface Link
    {
        out removed:        ();

        in id:              () -> uint32;

        in name:            () -> string;
        out nameChanged:    ();

        enum Flags
        {
            up          = 0x1;
            running     = 0x2;
            broadcast   = 0x4;
            loopback    = 0x8;
            p2p         = 0x10;
            multicast   = 0x20;
        }

        in flags:           () -> uint32;
        out flagsChanged:   ();

        in mtu:             () -> uint32;
        out mtuChanged:     ();

        in ip4:             () -> list<ip4::LinkAddress>;
        out ip4Changed:     ();
        
        in ip6:             () -> list<ip6::LinkAddress>;
        out ip6Changed:     ();
    }

    /////////////////////////////////////////////////////////
    scope ip4
    {
        struct Ip
        {
            array<uint8, 4> octets;
        }
        
        struct Address: Ip
        {
            uint16 port;
        }

        struct LinkAddress
        {
            Ip address;
            Ip netmask;
            Ip broadcast;
        } 

        include "net/stream.inc";
        include "net/datagram.inc";
    }

    /////////////////////////////////////////////////////////
    scope ip6
    {
        struct Ip
        {
            array<uint8, 16> octets;
        }
        
        struct Address: Ip
        {
            uint16 port;
        }

        struct LinkAddress
        {
            Ip address;
            uint16 prefixLength;

            enum Scope
            {
                null;
                host;
                link;
                global;
            }

            Scope scope;
        }
        
        include "net/stream.inc";
        include "net/datagram.inc";
    }

    /////////////////////////////////////////////////////////
    scope local
    {
        struct Address
        {
            string key;
        }

        include "net/stream.inc";
    }
}
