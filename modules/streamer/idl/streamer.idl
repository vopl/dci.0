
scope streamer
{
    struct Traffic
    {
        enum Kind
        {
            start       =0x01;
            stop        =0x02;
            restart     =0x03;
            error       =0x04;

//            negotiate       =0x11; //bytes order, protocol version, кто главный из двух участников

//            create          =0x21;
//            request         =0x22;
//            response        =0x23;
//            destroy         =0x24;

//            indexIdentifier =0x31;
//            indexError      =0x32;
        }

        Kind    kind;
        bytes   payload;
    }

    interface Channel
    {
        in flow:    (Traffic);
        out flow:   (Traffic);
    }


    interface Hub
    {
        in start:           (Channel)   -> ();
        in stop:            ()          -> ();

        out channelError:   ();

        in put:             (service);
        out put:            (service);

        in get:             (iid)       -> (service);
        out get:            (iid)       -> (service);

        in join:            (Channel);
    }

}
